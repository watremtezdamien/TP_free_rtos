MAP V:0,V:0xFF READ WRITE // Map User Memory region
DEFINE int SADR 0x22// Slave Address
	
signal void I2CDRIVER (void) {
unsigned long adr;
adr = V:0;
while (1) {
	wwatch (I2C_OUT); // Wait for data from Microcontroller
	while (I2C_OUT == 0x0100) { // START detected
		wwatch (I2C_OUT); // Wait for data from Microcontroller
		if (I2C_OUT > 0xFF) continue;
			if ((I2C_OUT >> 1) != SADR) continue; // test if Slave is addressed
				I2C_IN = 0xFF00; // ACK to Microcontroller
					if (I2C_OUT & 1) { // Slave Read
						while (1) {
							I2C_IN = _RBYTE(adr); // Read Byte from Memory
							adr++; // Increment Address
							wwatch (I2C_OUT); // Wait for ACK from Microcontroller
							if (I2C_OUT != 0xFF00) break;
							}
					}
		else { // Slave Write
				wwatch (I2C_OUT); // Wait for data from Microcontroller
				if (I2C_OUT > 0xFF) continue;
				adr = I2C_OUT | V:0; // Set Memory Address
				I2C_IN = 0xFF00; // ACK to Microcontroller
				while (1) {
					wwatch (I2C_OUT); // Wait for data from Microcontroller
					if (I2C_OUT > 0xFF) break;
					_WBYTE (adr, I2C_OUT); // Store Byte in Memory
					adr++; // Increment Address
					I2C_IN = 0xFF00; // ACK to Microcontroller
				}
			}
		}
	}
}